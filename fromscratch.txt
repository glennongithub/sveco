As in https://laravel.com/docs/5.5/homestead
To create machine for project 

In folder you want to use for project
composer require laravel/homestead --dev
vendor\\bin\\homestead make    (mac/linux php vendor/bin/homestead make)

Edit Homestead.yml acording to your wiches
in our case

ip: 192.168.19.14
memory: 2048
cpus: 1
provider: virtualbox
authorize: ~/.ssh/id_rsa.pub
keys:
    - ~/.ssh/id_rsa
folders:
    -
        map: '.'
        to: /home/vagrant/code
        type: "nfs"
sites:
    -
        map: sveco.test
        to: /home/vagrant/code/application/public
        type: symfony4
databases:
    - sveco
name: sveco-dev
hostname: sveco-dev


make sure hoste file is updated acoringly

then vagrant up

the ssh into your newly created machine
vagrant ssh sveco-dev   (or whatever name you chose in obove config)

then 
cd code   (or whatever path used in above config)

then
composer create-project symfony/skeleton application  (use application as project-name to make it easier to use same code everywhere)

then go to https://sveco.dev/index.php

installera annotations och twig och security

cd /home/vagrant/code/application
composer require annotations
composer require twig
composer require form
composer require validator


installera ngt som behövs för security annotations
composer require symfony/expression-language


composer require asset



exit to your host machine
install node.js
make sure you have ionic installed globally
npm install -g cordova ionic

then build an ned ionic app name dwebapp
ionic start webapp tabs  (tabs or whatever template you like to use)
answer no to question if you want to integrate cordova to target ios and andriod   (only yes if you really will build an app)
cd into that new dir and remove .git folder


vagrant into machine again and
now symlink that www folder of newly created ionic app to public
ln -s /home/vagrant/code/webapp/www/ /home/vagrant/code/application/public/app

also make sure to add that above line to after.sh so it's done when provisioned

Then exit to host again .
cd into webapp folder
run ionic server
 if works .. then commit and push to repo .. now someone else should ba able to get it going by a vagrant up .. and follow readme

    

